[build-system]
requires = ["uv>=0.6.17,<0.7.0"]
build-backend = "uv.build.api"

[project]
name = "mcp-rag"
version = "0.1.0"
dependencies = ["rag_api_server"]
requires-python = ">=3.11"

[tool.uv]
package = false

[tool.uv.workspace]
members = [
  "src/rag_core",
  "src/rag_api_server",
  "src/mcp_adapter",
]

[tool.uv.sources]
# PEP 503 正規化後のパッケージ名 = { workspace = true; (必要なら path も) }
"rag-core"        = { workspace = true }
"rag-api-server"  = { workspace = true }
"mcp-adapter"     = { workspace = true }

[dependency-groups]
dev = [
    "ruff>=0.11.7",
]

[tool.ruff]
# 1行の最大文字数
line-length = 88

[tool.ruff.lint]
# チェックするエラーの種類
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
]
# 除外するエラーの種類
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "W191",  # indentation contains tabs
    "B904", # raise ... from ... になっていない場合のエラーを無視
]

# ファイルごとのエラー除外
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

# isort の設定
[tool.ruff.lint.isort]
known-third-party = ["fastapi"]